---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-music-reg-app
  labels:
    app.kubernetes.io/name: spring-music
    app.kubernetes.io/instance: spring-music
    app.kubernetes.io/managed-by: spring-music
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-music
      app.kubernetes.io/instance: spring-music
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spring-music
        app.kubernetes.io/instance: spring-music
    spec:
      containers:
        - name: spring-music
          image: registry.tanzu.dk/music-reg/spring-music:0.12
          terminationMessagePolicy: FallbackToLogsOnError
          imagePullPolicy: Always 
          command: ['/app/start.sh']
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false 
            runAsNonRoot: false 
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: INSTANCE_NAME
              valueFrom:
                secretKeyRef:
                  name: mattias-db-instance-db-secret
                  key: instancename
            - name: NAMESPACE_NAME
              valueFrom:
                secretKeyRef:
                  name: mattias-db-instance-db-secret
                  key: namespace
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: mattias-db-instance-db-secret
                  key: dbname
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mattias-db-instance-db-secret
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mattias-db-instance-db-secret
                  key: password
            - name: USE_PIVOTAL_POSTGRES
              value: "true"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
      #imagePullSecrets:
      #  - name: springsecret
---
apiVersion: v1
kind: Service
metadata:
  name: spring-music-service
  labels:
    app.kubernetes.io/name: spring-music-service
    app.kubernetes.io/instance: spring-music
    app.kubernetes.io/managed-by: spring-music
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: spring-music
    app.kubernetes.io/instance: spring-music
